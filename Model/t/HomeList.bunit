# Copyright (c) 2010 bivio Software, Inc.  All Rights Reserved.
# $Id$
ListModel();
req()->initialize_fully;
my($title_key) = 'title' . random_string();
my($tag_key) = 'tag' . random_string();
my($desc_key) = 'desc' . random_string();
DateTime()->set_test_now('12/12/2050 12:0:0');
my($date) = DateTime()->now;
req()->set_realm('nissis');
model('CalendarEvent')->do_iterate(sub {
    my($ce) = @_;
    $ce->cascade_delete;
    return 1;
}, 'unauth_iterate_start', {
    url => 'http://homelist.bunit',
});
my($ce) = model('CalendarEvent')->create_realm(
    {
	realm_id => req('auth_id'),
	dtstart => $date,
	dtend => DateTime()->add_seconds($date, '7200'),
	time_zone => TimeZone()->AMERICA_DENVER,
	location => $tag_key,
	description => $desc_key,
	url => 'http://homelist.bunit',
    },
    {
	display_name => $title_key,
    },
);
model('VenueEvent')->create({
    venue_id => req('auth_id'),
    calendar_event_id => $ce->get('calendar_event_id'),
});
commit();
[
    load_page => [
        [{begin_date => Date()->add_days(Date()->from_datetime($date), -1)}] => [
	    {
		'RealmOwner.display_name' => $title_key,
		'owner.RealmOwner.display_name' => q{Nissi's},
#TODO: Write tests just for time formatting, move outside module
		start_end_am_pm => '5am - 7',
		month_day => 'Thursday December 12, 2050',
		'CalendarEvent.time_zone' => 'AMERICA_DENVER',
	    },
	],
        sub {
	    return [{what => $title_key}];
	} => [
	    {
		'RealmOwner.display_name' => $title_key,
	    },
	],
    ],
];
