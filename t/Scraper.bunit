# Copyright (c) 2011 bivio Software, Inc.  All Rights Reserved.
# $Id$
Request();
req()->set_realm('v-bunit_venue');
req()->put(scraper_bunit => '.');
model('CalendarEvent')->delete_all({realm_id => req('auth_id')});
my($now) = Date('1/15/2011');
[
    sub {
	return class()
	    ->new({
		date_time => $now,
		req => req(),
		scraper_list => model('ScraperList')->load_all
		    ->set_cursor_or_die(0),
	    });
    } => [
	{
	    method => 'internal_update',
	    compute_params => sub {
		my($case, $params) = @_;
		$case->get('object')->put(
		    'events',
		    [map(
			+{
			    dtstart => Date(shift(@$_) . '/2011'),
			    dtend => Date(shift(@$_) . '/2011'),
			    summary => shift(@$_),
			    time_zone => TimeZone()->AMERICA_DENVER,
			    url => 'http://bunit.test/' . random_string(),
			    description => random_string(),
			    venue => 'boulderado',
			},
			@$params,
		    )],
		);
		return [];
	    },
	    compute_return => sub {
		return model('CalendarEventFilterList')
		    ->map_iterate(
			sub {
			    my($it) = @_;
			    return [
				map(
				    Date()->to_string($_) =~ m{(.+)/2011},
				    $it->get(qw(CalendarEvent.dtstart CalendarEvent.dtend)),
				),
				$it->get('RealmOwner.display_name'),
			    ];
			},
			{begin_date => $now},
		    ),
	    },
	} => [
	    [] => [],
	    [[qw(1/1 1/16 s1)]] => [[qw(01/01 01/16 s1)]],
	    [[qw(1/1 1/17 s2)]] => [[qw(01/01 01/17 s2)]],
	    [[qw(1/2 1/17 s3)], [qw(1/2 1/18 s3)]] => [[qw(01/02 01/17 s3)]],
	    [[qw(1/1 1/17 s2)], [qw(1/1 1/18 s4)], [qw(1/2 1/17 s3)], [qw(1/3 1/19 s5)]]
		=> [[qw(01/01 01/17 s2)], [qw(01/01 01/18 s4)], [qw(01/02 01/17 s3)], [qw(01/03 01/19 s5)]],
	    [] =>[[qw(01/01 01/17 s2)], [qw(01/01 01/18 s4)], [qw(01/02 01/17 s3)], [qw(01/03 01/19 s5)]],
	],
    ],
];
